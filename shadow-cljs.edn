{:source-paths
 ["src"]

 :dependencies
 [[funcool/promesa "6.0.0"]
  [org.clojure/clojure "1.10.0"]
  [re-frame "1.2.0"]
  [cljs-http "0.1.46"]

  ;; Utilities
  [re-frisk "1.3.5"]
  [binaryage/devtools "1.0.3"]

  ;; Emacs dependencies
  [cider/piggieback "0.5.2"]
  [cider/cider-nrepl "0.25.9"]

  ;; Rule Engine
  [com.cerner/clara-rules "0.21.0"]
  [net.sekao/odoyle-rules "0.9.0"]
  ]

 :nrepl {:port 8777}

 :builds
 {:hexagonal {:target :browser
              :output-dir "build/hexagonal/js"
              :asset-path "/js"
              :modules {:main {:init-fn hexagonal.main/init}}
              :devtools {:http-root "build/hexagonal"
                         :http-port 5000
                         :preloads [re-frisk.preload]
                         :after-load hexagonal.main/reload}}

  :inversion {:target :browser
              :output-dir "build/inversion/js"
              :asset-path "/js"
              :modules {:main {:init-fn inversion.main/init}}
              :devtools {:http-root "build/inversion"
                         :http-port 5000
                         :preloads [re-frisk.preload]
                         :after-load inversion.main/reload}}

  :state-reload {:target :browser
                 :output-dir "build/state_reload/js"
                 :asset-path "/js"
                 :modules {:main {:init-fn state-reload.main/init}}
                 :devtools {:http-root "build/state_reload"
                            :http-port 5000
                            :preloads [re-frisk.preload]
                            :after-load state-reload.main/reload}}

  :rule-engine {:target :node-script
                :main rule-engine.main/main
                :output-to "build/rule_engine/main.js"
                :compiler-options {:infer-externs :auto
                                   :reader-features #{:node}}}
  }}
